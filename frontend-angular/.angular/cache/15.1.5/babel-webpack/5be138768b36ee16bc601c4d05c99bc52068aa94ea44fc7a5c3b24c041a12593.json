{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Project } from 'src/app/models/project';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { UploadService } from 'src/app/services/upload.service';\nimport { Global } from 'src/app/services/global';\nlet EditComponent = class EditComponent {\n  constructor(_projectService, _uploadService, _router, _route) {\n    this._projectService = _projectService;\n    this._uploadService = _uploadService;\n    this._router = _router;\n    this._route = _route;\n    this.status = '';\n    this.filesToUpload = [];\n    this.title = \"Modificar Proyecto\";\n    this.url = Global.url;\n    this.project = new Project('', '', '', '', '', 2023, '');\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      let id = params['id'];\n      this.getProject(id);\n    });\n  }\n  getProject(id) {\n    this._projectService.getProject(id).subscribe(response => {\n      this.project = response.project;\n    }, error => {\n      console.log(error);\n    });\n  }\n  onSubmit() {\n    this._projectService.updateProject(this.project).subscribe(response => {\n      if (response.project) {\n        if (this.filesToUpload) {\n          this._uploadService.makeFileRequest(Global.url + \"upload-image/\" + response.project._id, [], this.filesToUpload, 'image').then(result => {\n            this.save_project = result.project;\n            this.status = 'success';\n          });\n        } else {\n          this.save_project = response.project;\n          this.status = 'success';\n        }\n      } else {\n        this.status = 'failed';\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  fileChangeEvent(fileInput) {\n    this.filesToUpload = fileInput.target.files;\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n  providers: [ProjectService, UploadService]\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAc,eAAe;AAC/C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,MAAM,QAAQ,yBAAyB;AAQzC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAQxBC,YACUC,eAA+B,EAC/BC,cAA6B,EAC7BC,OAAe,EACfC,MAAsB;IAHtB,oBAAe,GAAfH,eAAe;IACf,mBAAc,GAAdC,cAAc;IACd,YAAO,GAAPC,OAAO;IACP,WAAM,GAANC,MAAM;IAPT,WAAM,GAAS,EAAE;IACjB,kBAAa,GAAc,EAAE;IAQlC,IAAI,CAACC,KAAK,GAAG,oBAAoB;IACjC,IAAI,CAACC,GAAG,GAAGR,MAAM,CAACQ,GAAG;IACrB,IAAI,CAACC,OAAO,GAAG,IAAIZ,OAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,CAAC;EAEpD;EAEAa,QAAQ;IACN,IAAI,CAACJ,MAAM,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAE;MACnC,IAAIE,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MAErB,IAAI,CAACG,UAAU,CAACD,EAAE,CAAC;IACrB,CAAC,CAAC;EAEJ;EAEAC,UAAU,CAACD,EAAM;IACf,IAAI,CAACV,eAAe,CAACW,UAAU,CAACD,EAAE,CAAC,CAACD,SAAS,CAC3CG,QAAQ,IAAE;MACN,IAAI,CAACN,OAAO,GAAGM,QAAQ,CAACN,OAAO;IACnC,CAAC,EACDO,KAAK,IAAE;MACLC,OAAO,CAACC,GAAG,CAAMF,KAAK,CAAC;IACzB,CAAC,CACF;EAEH;EACAG,QAAQ;IACN,IAAI,CAAChB,eAAe,CAACiB,aAAa,CAAC,IAAI,CAACX,OAAO,CAAC,CAACG,SAAS,CACxDG,QAAQ,IAAE;MACR,IAAIA,QAAQ,CAACN,OAAO,EAAE;QAEpB,IAAI,IAAI,CAACY,aAAa,EAAE;UACtB,IAAI,CAACjB,cAAc,CAACkB,eAAe,CAACtB,MAAM,CAACQ,GAAG,GAAC,eAAe,GAACO,QAAQ,CAACN,OAAO,CAACc,GAAG,EAAC,EAAE,EAAC,IAAI,CAACF,aAAa,EAAC,OAAO,CAAC,CACpHG,IAAI,CAAEC,MAAU,IAAG;YACjB,IAAI,CAACC,YAAY,GAAGD,MAAM,CAAChB,OAAO;YAClC,IAAI,CAACkB,MAAM,GAAC,SAAS;UAEvB,CAAC,CAAC;SACD,MAAI;UACH,IAAI,CAACD,YAAY,GAAGX,QAAQ,CAACN,OAAO;UACpC,IAAI,CAACkB,MAAM,GAAC,SAAS;;OAMxB,MAAI;QACH,IAAI,CAACA,MAAM,GAAC,QAAQ;;IAExB,CAAC,EACDX,KAAK,IAAE;MACLC,OAAO,CAACC,GAAG,CAAMF,KAAK,CAAC;IACzB,CAAC,CACF;EACH;EACAY,eAAe,CAACC,SAAa;IAE3B,IAAI,CAACR,aAAa,GAAeQ,SAAS,CAACC,MAAM,CAACC,KAAK;EAEzD;CAED;AA3EY9B,aAAa,eANzBL,SAAS,CAAC;EACToC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB,CAAC;EACnCC,SAAS,EAAC,CAACrC,cAAc,EAACC,aAAa;CACxC,CAAC,GACWE,aAAa,CA2EzB;SA3EYA,aAAa","names":["Component","Project","ProjectService","UploadService","Global","EditComponent","constructor","_projectService","_uploadService","_router","_route","title","url","project","ngOnInit","params","subscribe","id","getProject","response","error","console","log","onSubmit","updateProject","filesToUpload","makeFileRequest","_id","then","result","save_project","status","fileChangeEvent","fileInput","target","files","selector","templateUrl","styleUrls","providers"],"sourceRoot":"","sources":["C:\\Users\\sergio.garcia\\Documents\\Sergio Garcia\\Curso Java Script\\MEAN\\MEAN_Stack\\frontend-angular\\src\\app\\components\\edit\\edit.component.ts"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { Project } from 'src/app/models/project';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { UploadService } from 'src/app/services/upload.service';\nimport { Global } from 'src/app/services/global';\nimport {Router,ActivatedRoute,Params} from '@angular/router';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n  providers:[ProjectService,UploadService]\n})\nexport class EditComponent implements OnInit{\n\n  public title: string;\n  public project: Project;\n  public save_project:any;\n  public status: string='';\n  public filesToUpload:Array<File> =[];\n  public url:string;\n  constructor(\n    private _projectService: ProjectService,\n    private _uploadService: UploadService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n  ) {\n    this.title = \"Modificar Proyecto\";\n    this.url = Global.url;\n    this.project = new Project('','','','','',2023,'');\n    \n  }\n\n  ngOnInit(){\n    this._route.params.subscribe(params=>{\n      let id = params['id'];\n\n      this.getProject(id);\n    });\n    \n  }\n\n  getProject(id:any){\n    this._projectService.getProject(id).subscribe(\n      response=>{\n          this.project = response.project;\n      },\n      error=>{\n        console.log(<any>error);\n      }\n    )\n\n  }\n  onSubmit(){\n    this._projectService.updateProject(this.project).subscribe(\n      response=>{\n        if (response.project) {\n          \n          if (this.filesToUpload) {\n            this._uploadService.makeFileRequest(Global.url+\"upload-image/\"+response.project._id,[],this.filesToUpload,'image').\n          then((result:any)=>{\n            this.save_project = result.project;\n            this.status='success';\n            \n          });\n          }else{\n            this.save_project = response.project;\n            this.status='success';\n\n          }\n          \n          \n          \n        }else{\n          this.status='failed';\n        }\n      },\n      error=>{\n        console.log(<any>error);\n      }\n    )\n  }\n  fileChangeEvent(fileInput:any){\n    \n    this.filesToUpload= <Array<File>>fileInput.target.files;\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}