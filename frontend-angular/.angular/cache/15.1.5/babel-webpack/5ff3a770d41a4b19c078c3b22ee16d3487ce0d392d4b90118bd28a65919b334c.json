{"ast":null,"code":"import { Global } from \"./global\";\nimport * as i0 from \"@angular/core\";\nexport class UploadService {\n  constructor() {\n    this.url = Global.url;\n  }\n  makeFileRequest(url, params, files, name) {\n    return new Promise(function (resolve, reject) {\n      var formData = new FormData();\n      var xhr = new XMLHttpRequest();\n      for (let i = 0; i < files.length; i++) {\n        formData.append(name, files[i], files[i].name);\n      }\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            resolve(JSON.parse(xhr.response));\n          } else {\n            reject(xhr.response);\n          }\n        }\n      };\n      xhr.open('POST', url, true);\n      xhr.send(formData);\n    });\n  }\n}\nUploadService.ɵfac = function UploadService_Factory(t) {\n  return new (t || UploadService)();\n};\nUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UploadService,\n  factory: UploadService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAM,QAAQ,UAAU;;AAEjC,OAAM,MAAOC,aAAa;EAGtBC;IACI,IAAI,CAACC,GAAG,GAAGH,MAAM,CAACG,GAAG;EACzB;EAEAC,eAAe,CAACD,GAAU,EAACE,MAAoB,EAACC,KAAiB,EAACC,IAAW;IACzE,OAAO,IAAIC,OAAO,CAAC,UAASC,OAAO,EAACC,MAAM;MACtC,IAAIC,QAAQ,GAAO,IAAIC,QAAQ,EAAE;MACjC,IAAIC,GAAG,GAAE,IAAIC,cAAc,EAAE;MAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;QACnCJ,QAAQ,CAACM,MAAM,CAACV,IAAI,EAACD,KAAK,CAACS,CAAC,CAAC,EAACT,KAAK,CAACS,CAAC,CAAC,CAACR,IAAI,CAAC;;MAIhDM,GAAG,CAACK,kBAAkB,GAAC;QACnB,IAAGL,GAAG,CAACM,UAAU,IAAE,CAAC,EAAC;UACjB,IAAGN,GAAG,CAACO,MAAM,IAAE,GAAG,EAAC;YACfX,OAAO,CAACY,IAAI,CAACC,KAAK,CAACT,GAAG,CAACU,QAAQ,CAAC,CAAC;WACpC,MAAI;YACDb,MAAM,CAACG,GAAG,CAACU,QAAQ,CAAC;;;MAGhC,CAAC;MACDV,GAAG,CAACW,IAAI,CAAC,MAAM,EAACrB,GAAG,EAAC,IAAI,CAAC;MACzBU,GAAG,CAACY,IAAI,CAACd,QAAQ,CAAC;IAEtB,CAAC,CAAC;EAEN;;AA/BSV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAyB,SAAbzB,aAAa;AAAA","names":["Global","UploadService","constructor","url","makeFileRequest","params","files","name","Promise","resolve","reject","formData","FormData","xhr","XMLHttpRequest","i","length","append","onreadystatechange","readyState","status","JSON","parse","response","open","send","factory"],"sourceRoot":"","sources":["C:\\Users\\sergio.garcia\\Documents\\Sergio Garcia\\Curso Java Script\\MEAN\\MEAN_Stack\\frontend-angular\\src\\app\\services\\upload.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Global } from \"./global\";\r\n@Injectable()\r\nexport class UploadService{\r\n    public url: string;\r\n\r\n    constructor() {\r\n        this.url = Global.url;\r\n    }\r\n\r\n    makeFileRequest(url:string,params:Array<string>,files:Array<File>,name:string){\r\n        return new Promise(function(resolve,reject){\r\n            var formData:any = new FormData();\r\n            var xhr= new XMLHttpRequest();\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                formData.append(name,files[i],files[i].name);\r\n                \r\n            }\r\n\r\n            xhr.onreadystatechange=function(){\r\n                if(xhr.readyState==4){\r\n                    if(xhr.status==200){\r\n                        resolve(JSON.parse(xhr.response))\r\n                    }else{\r\n                        reject(xhr.response);\r\n                    }\r\n                }\r\n            }\r\n            xhr.open('POST',url,true);\r\n            xhr.send(formData);\r\n\r\n        });\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}